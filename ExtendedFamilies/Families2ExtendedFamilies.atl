-- @path Families=/ExtendedFamilies/Families.ecore
-- @path ExtendedFamilies=/ExtendedFamilies/ExtendedFamilies.ecore
module Families2ExtendedFamilies;

create OUT: ExtendedFamilies from IN: Families;

-- string : toUpper()
-- println() writes the self string onto the default output

helper context Families!Member def: isFemale: Boolean =
	if not self.familyMother.oclIsUndefined() then
		true
	else
		not self.familyDaughter.oclIsUndefined()
	endif;

helper context Families!Member def: isParent: Boolean =
	if not self.familyMother.oclIsUndefined() then
		true
	else
		not self.familyFather.oclIsUndefined()
	endif;

helper context Families!Member def: isMother: Boolean =
	self.isFemale and self.isParent;

helper context Families!Member def: isFather: Boolean =
	not self.isFemale and self.isParent;

helper context Families!Member def: isDaughter: Boolean =
	self.isFemale and not self.isParent;

helper context Families!Member def: isSon: Boolean =
	not self.isFemale and not self.isParent;

rule Member2Person {
	from
		s: Families!Member
	to
		t: ExtendedFamilies!Person (
			firstName <- s.firstName
		)
}

rule Member2Father extends Member2Person {
	from
		s: Families!Member (s.isFather)
	to
		t: ExtendedFamilies!Male (
			family <- thisModule.resolveTemp(s.familyFather, 't_family')
		)
}

rule Member2Son extends Member2Person {
	from
		s: Families!Member (s.isSon)
	to
		t: ExtendedFamilies!Male (
			family <- thisModule.resolveTemp(s.familySon, 't_family'),
			parents <- thisModule.resolveTemp(s.familySon.father, 't'),
			parents <- thisModule.resolveTemp(s.familySon.mother, 't')
		)
}

rule Member2Mother extends Member2Person {
	from
		s: Families!Member (s.isMother)
	to
		t: ExtendedFamilies!Female (
			family <- thisModule.resolveTemp(s.familyMother, 't_family')
		)
}

rule Member2Daughter extends Member2Person {
	from
		s: Families!Member (s.isDaughter)
	to
		t: ExtendedFamilies!Female (
			family <- thisModule.resolveTemp(s.familyDaughter, 't_family'),
			parents <- thisModule.resolveTemp(s.familyDaughter.mother, 't'),
			parents <- thisModule.resolveTemp(s.familyDaughter.father, 't')
		)
}

rule Family2Family {
	from
		s_family: Families!Family
	to
		t_family: ExtendedFamilies!Family (
			lastName <- s_family.lastName.toUpper()
		)
}
