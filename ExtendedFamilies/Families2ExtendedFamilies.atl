-- @path Families=/ExtendedFamilies/Families.ecore
-- @path ExtendedFamilies=/ExtendedFamilies/ExtendedFamilies.ecore
module Families2ExtendedFamilies;

create OUT: ExtendedFamilies from IN: Families;

-- string : toUpper()
-- println() writes the self string onto the default output

helper context Families!Member def: isFemale: Boolean =
	if not self.familyMother.oclIsUndefined() then
		true
	else
		not self.familyDaughter.oclIsUndefined()
	endif;

helper context Families!Member def: isParent: Boolean =
	if not self.familyMother.oclIsUndefined() then
		true
	else
		not self.familyFather.oclIsUndefined()
	endif;

helper context Families!Member def: familyName: String =
	Set{self.familyFather, self.familyMother, self.familySon, self.familyDaughter}
		->any(f|not f.oclIsUndefined()).lastName;
		
helper context Families!Member def: isMother: Boolean =
	if self.isFemale and self.isParent then
		true
	else
		false
	endif;
		
rule Member2Father {
	from
		s: Families!Member (not s.isFemale and s.isParent)
	to
		t: ExtendedFamilies!Male (
			firstName <- s.firstName,
			family <- thisModule.resolveTemp(s.familyFather, 't_family')
		)
}

rule Member2Son {
	from
		s: Families!Member (not s.isFemale and not s.isParent)
	to
		t: ExtendedFamilies!Male (
			firstName <- s.firstName,
			family <- thisModule.resolveTemp(s.familySon, 't_family'),
			parents <- thisModule.resolveTemp(s.familySon.father, 't'),
			parents <- thisModule.resolveTemp(s.familySon.mother, 't')
		)
}

rule Member2Mother {
	from
		s: Families!Member (s.isFemale and s.isParent)
	to
		t: ExtendedFamilies!Female (
			firstName <- s.firstName,
			family <- thisModule.resolveTemp(s.familyMother, 't_family')
		)
}

rule Member2Daughter {
	from
		s: Families!Member (s.isFemale and not s.isParent)
	to
		t: ExtendedFamilies!Female (
			firstName <- s.firstName,
			family <- thisModule.resolveTemp(s.familyDaughter, 't_family'),
			parents <- thisModule.resolveTemp(s.familyDaughter.mother, 't'),
			parents <- thisModule.resolveTemp(s.familyDaughter.father, 't')
		)
}

rule Family2Family {
	from
		s_family: Families!Family
	to
		t_family: ExtendedFamilies!Family (
			lastName <- s_family.lastName.toUpper()
		)
}
